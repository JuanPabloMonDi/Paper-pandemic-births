ncol=4,
left = textGrob("Age group",gp=gpar(fontsize=15,font=2),rot=90),
top= textGrob("Cuba", gp=gpar(fontsize=13,font=2),rot=0),
bottom=textGrob("Births in month",gp=gpar(fontsize=15,font=2))
)
grid6<-grid.arrange(grid5,legend,ncol=1, heights=c(10,1))
grid7<-grid.arrange(
#First line
arrangeGrob(PlotTimeSeries("X07M1524",data,ylim = c(-60,60)), left=Age("X07M1524"), top=study_years("X07M1524")),
arrangeGrob(PlotTimeSeries("X8M1524",data,ylim = c(-60,60)), top=study_years("X8M1524")),
arrangeGrob(PlotTimeSeries("X12M1524",data,ylim = c(-60,60)), top=study_years("X12M1524")),
arrangeGrob(PlotTimeSeries("X00M1524",data,ylim = c(-60,60)), top=study_years("X00M1524")),
#Second line
arrangeGrob(PlotTimeSeries("X07M2529",data,ylim = c(-60,60)), left=Age("X07M2529")),
arrangeGrob(PlotTimeSeries("X8M2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12M2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00M2529",data,ylim = c(-60,60))),
#Third line
arrangeGrob(PlotTimeSeries("X07M3034",data,ylim = c(-60,60)), left=Age("X07M3034")),
arrangeGrob(PlotTimeSeries("X8M3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12M3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00M3034",data,ylim = c(-60,60))),
#Fourth line
arrangeGrob(PlotTimeSeries("X07M35",data,ylim = c(-60,60)), left=Age("X07M35")),
arrangeGrob(PlotTimeSeries("X8M35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12M35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00M35",data,ylim = c(-60,60))),
ncol=4,
left = textGrob("Age group",gp=gpar(fontsize=15,font=2),rot=90),
top= textGrob("Mexico", gp=gpar(fontsize=13,font=2),rot=0),
bottom=textGrob("Births in month",gp=gpar(fontsize=15,font=2))
)
grid8<-grid.arrange(grid7,legend,ncol=1, heights=c(10,1))
grid9<-grid.arrange(
#First line
arrangeGrob(PlotTimeSeries("X07CH1524",data,ylim = c(-60,60)), left=Age("X07CH1524"), top=study_years("X07CH1524")),
arrangeGrob(PlotTimeSeries("X8CH1524",data,ylim = c(-60,60)), top=study_years("X8CH1524")),
arrangeGrob(PlotTimeSeries("X12CH1524",data,ylim = c(-60,60)), top=study_years("X12CH1524")),
arrangeGrob(PlotTimeSeries("X00CH1524",data,ylim = c(-60,60)), top=study_years("X00CH1524")),
#Second line
arrangeGrob(PlotTimeSeries("X07CH2529",data,ylim = c(-60,60)), left=Age("X07CH2529")),
arrangeGrob(PlotTimeSeries("X8CH2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CH2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CH2529",data,ylim = c(-60,60))),
#Third line
arrangeGrob(PlotTimeSeries("X07CH3034",data,ylim = c(-60,60)), left=Age("X07CH3034")),
arrangeGrob(PlotTimeSeries("X8CH3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CH3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CH3034",data,ylim = c(-60,60))),
#Fourth line
arrangeGrob(PlotTimeSeries("X07CH35",data,ylim = c(-60,60)), left=Age("X07CH35")),
arrangeGrob(PlotTimeSeries("X8CH35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CH35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CH35",data,ylim = c(-60,60))),
ncol=4,
left = textGrob("Age group",gp=gpar(fontsize=15,font=2),rot=90),
top= textGrob("Chile", gp=gpar(fontsize=13,font=2),rot=0),
bottom=textGrob("Births in month",gp=gpar(fontsize=15,font=2))
)
grid10<-grid.arrange(grid9,legend,ncol=1, heights=c(10,1))
Graph<-autoplot(prevArima,color="blue",series="Forecast", PI=F) + #plot time series
#Settings for confidence interval
geom_ribbon(aes( x=seq(2020.833, by = 0.0833333, length.out = 36),
ymin = lower, ymax = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1]))  ,
fill = "black",
alpha = 0.3,
color="black",
linetype="dotted"
)+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = lower),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black",linetype="longdash")+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black", linetype = "longdash")+
theme_bw()+ #set_theme
autolayer(tedata,series="Observed",colour = T)+ #plot observed data
autolayer(prevArima$mean,series="Forecasted",colour=T)+ #plot predicted data
scale_x_continuous(labels = function(x) format(as.yearmon(x, origin = "2012-10-01"), "%b-%Y"))+ #Set the x-axis to date format
coord_cartesian(xlim = as.yearmon(c("2020-10", "2022-11")))+  #Horizontal limits in date format
ylim(c(min(minlim,-maxlim)),max(-minlim,maxlim))+ #Range of plot
theme(legend.position = legend_position, #Legend position
plot.title = element_text(size=10), #Title size
axis.title.x=element_blank(), #Remove x axis lab
axis.text.x=element_text(angle = 45, vjust = 1.2, hjust=1,size = 7.75), #Modify x axis values
axis.ticks.y = element_blank(),  # Remove y axis values
axis.title.y = element_blank(), # Remove y labs
axis.ticks.x=element_blank())+ # Remove x ticks
ggtitle(titlee)+  #Add title to the graph
geom_line(data = data.frame(x = c(max(time(prevArima$x)), min(time(prevArima$mean))), y = c(prevArima$x[length(prevArima$x)], prevArima$mean[1])),
aes(x = x, y = y), color = "blue")+ #Fill the hole between the last observation and the first prediction that is made by the autoplot function
labs(x="Births in months", y="Variation",colour="Birth counts")+ #Add names for X and Y axis
geom_vline(xintercept=2020.833,color="forestgreen",alpha=0.95)+ #Horizontal line to mark the beginning of pandemic
annotate("text",x = 2021.25, y = maxlim-10, label = "Pandemic", color = "forestgreen",size=2.5,fontface="bold")+  #Add text "Pandemic" to the graph
#Draw the arrow below the "pandemic" text
geom_segment(aes(x = x1, xend = x2,
y = y1, yend = y2),data = line,
color = "forestgreen",linewidth =0.7, #a3a3a3 other color
arrow = arrow(length = unit(0.0725,"inch")),
lineend = "round",
linejoin = "round"
)+
scale_color_manual(values=c("blue","red"))#Set colors of the legend
Graph
Graph<-autoplot(prevArima,color="blue",series="Forecast", PI=F) + #plot time series
#Settings for confidence interval
geom_ribbon(aes( x=seq(2020.833, by = 0.0833333, length.out = 36),
ymin = lower, ymax = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1]))  ,
fill = "black",
alpha = 0.2,
color="black",
linetype="dotted"
)+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = lower),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black",linetype="longdash")+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black", linetype = "longdash")+
theme_bw()+ #set_theme
autolayer(tedata,series="Observed",colour = T)+ #plot observed data
autolayer(prevArima$mean,series="Forecasted",colour=T)+ #plot predicted data
scale_x_continuous(labels = function(x) format(as.yearmon(x, origin = "2012-10-01"), "%b-%Y"))+ #Set the x-axis to date format
coord_cartesian(xlim = as.yearmon(c("2020-10", "2022-11")))+  #Horizontal limits in date format
ylim(c(min(minlim,-maxlim)),max(-minlim,maxlim))+ #Range of plot
theme(legend.position = legend_position, #Legend position
plot.title = element_text(size=10), #Title size
axis.title.x=element_blank(), #Remove x axis lab
axis.text.x=element_text(angle = 45, vjust = 1.2, hjust=1,size = 7.75), #Modify x axis values
axis.ticks.y = element_blank(),  # Remove y axis values
axis.title.y = element_blank(), # Remove y labs
axis.ticks.x=element_blank())+ # Remove x ticks
ggtitle(titlee)+  #Add title to the graph
geom_line(data = data.frame(x = c(max(time(prevArima$x)), min(time(prevArima$mean))), y = c(prevArima$x[length(prevArima$x)], prevArima$mean[1])),
aes(x = x, y = y), color = "blue")+ #Fill the hole between the last observation and the first prediction that is made by the autoplot function
labs(x="Births in months", y="Variation",colour="Birth counts")+ #Add names for X and Y axis
geom_vline(xintercept=2020.833,color="forestgreen",alpha=0.95)+ #Horizontal line to mark the beginning of pandemic
annotate("text",x = 2021.25, y = maxlim-10, label = "Pandemic", color = "forestgreen",size=2.5,fontface="bold")+  #Add text "Pandemic" to the graph
#Draw the arrow below the "pandemic" text
geom_segment(aes(x = x1, xend = x2,
y = y1, yend = y2),data = line,
color = "forestgreen",linewidth =0.7, #a3a3a3 other color
arrow = arrow(length = unit(0.0725,"inch")),
lineend = "round",
linejoin = "round"
)+
scale_color_manual(values=c("blue","red"))#Set colors of the legend
Graph
Graph<-autoplot(prevArima,color="blue",series="Forecast", PI=F) + #plot time series
#Settings for confidence interval
geom_ribbon(aes( x=seq(2020.833, by = 0.0833333, length.out = 36),
ymin = lower, ymax = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1]))  ,
fill = "black",
alpha = 0.15,
color="black",
linetype="dotted"
)+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = lower),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black",linetype="longdash")+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black", linetype = "longdash")+
theme_bw()+ #set_theme
autolayer(tedata,series="Observed",colour = T)+ #plot observed data
autolayer(prevArima$mean,series="Forecasted",colour=T)+ #plot predicted data
scale_x_continuous(labels = function(x) format(as.yearmon(x, origin = "2012-10-01"), "%b-%Y"))+ #Set the x-axis to date format
coord_cartesian(xlim = as.yearmon(c("2020-10", "2022-11")))+  #Horizontal limits in date format
ylim(c(min(minlim,-maxlim)),max(-minlim,maxlim))+ #Range of plot
theme(legend.position = legend_position, #Legend position
plot.title = element_text(size=10), #Title size
axis.title.x=element_blank(), #Remove x axis lab
axis.text.x=element_text(angle = 45, vjust = 1.2, hjust=1,size = 7.75), #Modify x axis values
axis.ticks.y = element_blank(),  # Remove y axis values
axis.title.y = element_blank(), # Remove y labs
axis.ticks.x=element_blank())+ # Remove x ticks
ggtitle(titlee)+  #Add title to the graph
geom_line(data = data.frame(x = c(max(time(prevArima$x)), min(time(prevArima$mean))), y = c(prevArima$x[length(prevArima$x)], prevArima$mean[1])),
aes(x = x, y = y), color = "blue")+ #Fill the hole between the last observation and the first prediction that is made by the autoplot function
labs(x="Births in months", y="Variation",colour="Birth counts")+ #Add names for X and Y axis
geom_vline(xintercept=2020.833,color="forestgreen",alpha=0.95)+ #Horizontal line to mark the beginning of pandemic
annotate("text",x = 2021.25, y = maxlim-10, label = "Pandemic", color = "forestgreen",size=2.5,fontface="bold")+  #Add text "Pandemic" to the graph
#Draw the arrow below the "pandemic" text
geom_segment(aes(x = x1, xend = x2,
y = y1, yend = y2),data = line,
color = "forestgreen",linewidth =0.7, #a3a3a3 other color
arrow = arrow(length = unit(0.0725,"inch")),
lineend = "round",
linejoin = "round"
)+
scale_color_manual(values=c("blue","red"))#Set colors of the legend
Graph
Graph<-autoplot(prevArima,color="blue",series="Forecast", PI=F) + #plot time series
#Settings for confidence interval
geom_ribbon(aes( x=seq(2020.833, by = 0.0833333, length.out = 36),
ymin = lower, ymax = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1]))  ,
fill = "black",
alpha = 0.2,
color="black",
linetype="dotted"
)+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = lower),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black",linetype="longdash")+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black", linetype = "longdash")+
theme_bw()+ #set_theme
autolayer(tedata,series="Observed",colour = T)+ #plot observed data
autolayer(prevArima$mean,series="Forecasted",colour=T)+ #plot predicted data
scale_x_continuous(labels = function(x) format(as.yearmon(x, origin = "2012-10-01"), "%b-%Y"))+ #Set the x-axis to date format
coord_cartesian(xlim = as.yearmon(c("2020-10", "2022-11")))+  #Horizontal limits in date format
ylim(c(min(minlim,-maxlim)),max(-minlim,maxlim))+ #Range of plot
theme(legend.position = legend_position, #Legend position
plot.title = element_text(size=10), #Title size
axis.title.x=element_blank(), #Remove x axis lab
axis.text.x=element_text(angle = 45, vjust = 1.2, hjust=1,size = 7.75), #Modify x axis values
axis.ticks.y = element_blank(),  # Remove y axis values
axis.title.y = element_blank(), # Remove y labs
axis.ticks.x=element_blank())+ # Remove x ticks
ggtitle(titlee)+  #Add title to the graph
geom_line(data = data.frame(x = c(max(time(prevArima$x)), min(time(prevArima$mean))), y = c(prevArima$x[length(prevArima$x)], prevArima$mean[1])),
aes(x = x, y = y), color = "blue")+ #Fill the hole between the last observation and the first prediction that is made by the autoplot function
labs(x="Births in months", y="Variation",colour="Birth counts")+ #Add names for X and Y axis
geom_vline(xintercept=2020.833,color="forestgreen",alpha=0.95)+ #Horizontal line to mark the beginning of pandemic
annotate("text",x = 2021.25, y = maxlim-10, label = "Pandemic", color = "forestgreen",size=2.5,fontface="bold")+  #Add text "Pandemic" to the graph
#Draw the arrow below the "pandemic" text
geom_segment(aes(x = x1, xend = x2,
y = y1, yend = y2),data = line,
color = "forestgreen",linewidth =0.7, #a3a3a3 other color
arrow = arrow(length = unit(0.0725,"inch")),
lineend = "round",
linejoin = "round"
)+
scale_color_manual(values=c("blue","red"))#Set colors of the legend
PlotTimeSeries<-function(Variable,data, legend=F,tittle=F, ylim=c(-80,80)){
#Variable: The name of the column/variable in the data set
#data: The dataset where the data is going to be obtained
# legend: plot legend in graph
# title: plot an automated title generated with the name, age group and years of study
#ylim: a vector of length 2 which values are used to adjust the range on the plot the graph. If NULL, it will only consider the variable in the function.
#     If "country" it will consider all time series referring to the same country to adjust ylim on the plot
#     If "all" it will consider all the countries in dataset. if "notCR" it wont consider neither Cuba or Costa Rica (this because their variations are very high)
#if (Variable %in% unique(sapply(colnames(data),country))){
#  data2<-data
#  data2[["B1524"]]<-rowSums(data[sapply(colnames(data),Age)=="15 - 24"])
#  }
#Select the columns that are for the same country of the Variable
country_columns<-colnames(data)[sapply(colnames(data),country)%in% country(Variable)]
#Now we will adjust the range of the plot, it depends if it wants to be the same for all the countries or not
if (class(ylim)=="numeric"){maxlim<-ylim[2]
minlim<-ylim[1]}else{
if (is.null(ylim) == T){
data2<-data[c("Mes",Variable)]}else{
if (ylim=="country"){
data2<-data[c("Mes",country_columns)]}
if(ylim =="notCR"){
data2<-data[colnames(data)[sapply(colnames(data),country)!="Cuba"]]
data2<-data2[colnames(data2)[sapply(colnames(data2),country)!="Costa Rica"]]}
}
if (is.null(ylim)==T){
maxlim<-max(data2[data2$Mes>"Oct 2020",][2:ncol(data2)], na.rm = T)+20
minlim<-min(data2[data2$Mes>"Oct 2020",][2:ncol(data2)], na.rm = T)-20
}else{
if (ylim%in%c("country","notCR")){
maxlim<-max(data2[data2$Mes>"Oct 2020",][2:ncol(data2)], na.rm = T)+20
minlim<-min(data2[data2$Mes>"Oct 2020",][2:ncol(data2)], na.rm = T)-20
}else{if (ylim=="all"){
maxlim<-max(data[data$Mes>"Oct 2020",][2:ncol(data)], na.rm = T)+20
minlim<-min(data[data$Mes>"Oct 2020",][2:ncol(data)], na.rm = T)-20
}}}}
#Just in case there is no data available in the selected column
if (nrow(data[!is.na(data[Variable]),][Variable])==0){return(ggplot() +
labs(x = "", y = "", title = "")+
annotate("text",x = 2021.665, y = (maxlim-minlim)/2, size = 10, label="No info",color = "black")+
xlim(c(2020.83,2022.5))+ #Os limites horizontais do Graph
ylim(c(minlim-10,maxlim+10)) #Os limites verticais do Graph
)}else{
#now, we make the arima process
train_data = ts(data[Variable], start = c(2012,1), end = c(2020,10), frequency = 12)
data_ts = ts(data[Variable], start = c(2012,1), end = c(2022,12), frequency = 12)
tedata = window(data_ts, start=c(2020,11), end=c(2022,12))
ModArima = auto.arima(train_data, trace = T, stepwise = F, approximation = F)
prevArima=forecast(ModArima, h=36, level = 95) #The parameter "level" establish the confidence intervals. It can be a vector to plot multiple intervals
accuracy(prevArima)
#If true, we add the title and legend to the plot
titles<-info_variable(Variable)
if (tittle==T){
titlee<-paste("Women between ",titles[[3]],"-",titles[[4]]," with ",titles[[1]],"years of schooling - ",titles[[2]])
}else{titlee=" "}
if (legend==T){
legend_position="bottom"
}else{legend_position="none"}
line<-data.frame(x1=2020.85,x2=2021.7,y1=maxlim-20,y2=maxlim-20)
#Now, we will plot the time series, most of the parameters are just for aesthetic purposes.
#A simpler code could be plot(PrevArima)
Graph<-autoplot(prevArima,color="blue",series="Forecast", PI=F) + #plot time series
#Settings for confidence interval
geom_ribbon(aes( x=seq(2020.833, by = 0.0833333, length.out = 36),
ymin = lower, ymax = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1]))  ,
fill = "black",
alpha = 0.2,
color="black",
linetype="dotted"
)+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = lower),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black",linetype="longdash")+
geom_line(aes(x=seq(2020.833, by = 0.0833333, length.out = 36),
y = upper),
data =data.frame(lower=as.numeric(prevArima$lower[,1]),upper=as.numeric(prevArima$upper[,1])),
size = 0.1, color = "black", linetype = "longdash")+
theme_bw()+ #set_theme
autolayer(tedata,series="Observed",colour = T)+ #plot observed data
autolayer(prevArima$mean,series="Forecasted",colour=T)+ #plot predicted data
scale_x_continuous(labels = function(x) format(as.yearmon(x, origin = "2012-10-01"), "%b-%Y"))+ #Set the x-axis to date format
coord_cartesian(xlim = as.yearmon(c("2020-10", "2022-11")))+  #Horizontal limits in date format
ylim(c(min(minlim,-maxlim)),max(-minlim,maxlim))+ #Range of plot
theme(legend.position = legend_position, #Legend position
plot.title = element_text(size=10), #Title size
axis.title.x=element_blank(), #Remove x axis lab
axis.text.x=element_text(angle = 45, vjust = 1.2, hjust=1,size = 7.75), #Modify x axis values
axis.ticks.y = element_blank(),  # Remove y axis values
axis.title.y = element_blank(), # Remove y labs
axis.ticks.x=element_blank())+ # Remove x ticks
ggtitle(titlee)+  #Add title to the graph
geom_line(data = data.frame(x = c(max(time(prevArima$x)), min(time(prevArima$mean))), y = c(prevArima$x[length(prevArima$x)], prevArima$mean[1])),
aes(x = x, y = y), color = "blue")+ #Fill the hole between the last observation and the first prediction that is made by the autoplot function
labs(x="Births in months", y="Variation",colour="Birth counts")+ #Add names for X and Y axis
geom_vline(xintercept=2020.833,color="forestgreen",alpha=0.95)+ #Horizontal line to mark the beginning of pandemic
annotate("text",x = 2021.25, y = maxlim-10, label = "Pandemic", color = "forestgreen",size=2.5,fontface="bold")+  #Add text "Pandemic" to the graph
#Draw the arrow below the "pandemic" text
geom_segment(aes(x = x1, xend = x2,
y = y1, yend = y2),data = line,
color = "forestgreen",linewidth =0.7, #a3a3a3 other color
arrow = arrow(length = unit(0.0725,"inch")),
lineend = "round",
linejoin = "round"
)+
scale_color_manual(values=c("blue","red"))#Set colors of the legend
return(Graph)}
}
# extract legend
legend <- plot_table$grobs[[legend_plot]]
get_only_legend <- function(plot) {
# get tabular interpretation of plot
plot_table <- ggplot_gtable(ggplot_build(plot))
#  Mark only legend in plot
legend_plot <- which(sapply(plot_table$grobs, function(x) x$name) == "guide-box")
# extract legend
legend <- plot_table$grobs[[legend_plot]]
# return legend
return(legend)
}
#First, we generate the legend for the grid
legend<-get_only_legend(PlotTimeSeries("X12B35",data,legend = T))
#grid for Costa Rica
grid1<-grid.arrange(
#First line
arrangeGrob(PlotTimeSeries("X07CR1524",data,ylim = c(-60,60)), left=Age("X07CR1524"), top=study_years("X07CR1524")),
arrangeGrob(PlotTimeSeries("X8CR1524",data,ylim = c(-60,60)), top=study_years("X8CR1524")),
arrangeGrob(PlotTimeSeries("X12CR1524",data,ylim = c(-60,60)), top=study_years("X12CR1524")),
arrangeGrob(PlotTimeSeries("X00CR1524",data,ylim = c(-60,60)), top=study_years("X00CR1524")),
#Second line
arrangeGrob(PlotTimeSeries("X07CR2529",data,ylim = c(-60,60)), left=Age("X07CR2529")),
arrangeGrob(PlotTimeSeries("X8CR2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CR2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CR2529",data,ylim = c(-60,60))),
#Third line
arrangeGrob(PlotTimeSeries("X07CR3034",data,ylim = c(-60,60)), left=Age("X07CR3034")),
arrangeGrob(PlotTimeSeries("X8CR3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CR3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CR3034",data,ylim = c(-60,60))),
#Fourth line
arrangeGrob(PlotTimeSeries("X07CR35",data,ylim = c(-60,60)), left=Age("X07CR35")),
arrangeGrob(PlotTimeSeries("X8CR35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CR35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CR35",data,ylim = c(-60,60))),
ncol=4,
left = textGrob("Age group",gp=gpar(fontsize=11,font=2),rot=90),
top= textGrob("Costa Rica", gp=gpar(fontsize=13,font=2),rot=0),
bottom=textGrob("Births in month",gp=gpar(fontsize=11,font=2))
)
grid2<-grid.arrange(grid1,legend,ncol=1, heights=c(10,1))
grid3<-grid.arrange(
#First line
arrangeGrob(PlotTimeSeries("X07B1524",data,ylim = c(-60,60)), left=Age("X07B1524"), top=study_years("X07B1524")),
arrangeGrob(PlotTimeSeries("X8B1524",data,ylim = c(-60,60)), top=study_years("X8CR1524")),
arrangeGrob(PlotTimeSeries("X12B1524",data,ylim = c(-60,60)), top=study_years("X12B1524")),
arrangeGrob(PlotTimeSeries("X00B1524",data,ylim = c(-60,60)), top=study_years("X00B1524")),
#Second line
arrangeGrob(PlotTimeSeries("X07B2529",data,ylim = c(-60,60)), left=Age("X07B2529")),
arrangeGrob(PlotTimeSeries("X8B2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12B2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00B2529",data,ylim = c(-60,60))),
#Third line
arrangeGrob(PlotTimeSeries("X07B3034",data,ylim = c(-60,60)), left=Age("X07B3034")),
arrangeGrob(PlotTimeSeries("X8B3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12B3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00B3034",data,ylim = c(-60,60))),
#Fourth line
arrangeGrob(PlotTimeSeries("X07B35",data,ylim = c(-60,60)), left=Age("X07B35")),
arrangeGrob(PlotTimeSeries("X8B35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12B35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00B35",data,ylim = c(-60,60))),
ncol=4,
left = textGrob("Age group",gp=gpar(fontsize=11,font=2),rot=90),
top= textGrob("Brazil", gp=gpar(fontsize=13,font=2),rot=0),
bottom=textGrob("Births in months",gp=gpar(fontsize=11,font=2))
)
grid4<-grid.arrange(grid3,legend,ncol=1, heights=c(10,1))
#Cuba was discarted from the paper due bad quality data
#Grid for Cuba
grid5<-grid.arrange(
#First line
arrangeGrob(PlotTimeSeries("X07CB1524",data,ylim = c(-60,60)), left=Age("X07CB1524"), top=study_years("X07CB1524")),
arrangeGrob(PlotTimeSeries("X8CB1524",data,ylim = c(-60,60)), top=study_years("X8CB1524")),
arrangeGrob(PlotTimeSeries("X12CB1524",data,ylim = c(-60,60)), top=study_years("X12CB1524")),
arrangeGrob(PlotTimeSeries("X00CB1524",data,ylim = c(-60,60)), top=study_years("X00CB1524")),
#Second line
arrangeGrob(PlotTimeSeries("X07CB2529",data,ylim = c(-60,60)), left=Age("X07CB2529")),
arrangeGrob(PlotTimeSeries("X8CB2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CB2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CB2529",data,ylim = c(-60,60))),
#Third line
arrangeGrob(PlotTimeSeries("X07CB3034",data,ylim = c(-60,60)), left=Age("X07CB3034")),
arrangeGrob(PlotTimeSeries("X8CB3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CB3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CB3034",data,ylim = c(-60,60))),
#Fourth line
arrangeGrob(PlotTimeSeries("X07CB35",data,ylim = c(-60,60)), left=Age("X07CB35")),
arrangeGrob(PlotTimeSeries("X8CB35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CB35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CB35",data,ylim = c(-60,60))),
ncol=4,
left = textGrob("Age group",gp=gpar(fontsize=11,font=2),rot=90),
top= textGrob("Cuba", gp=gpar(fontsize=13,font=2),rot=0),
bottom=textGrob("Births in months",gp=gpar(fontsize=11,font=2))
)
grid6<-grid.arrange(grid5,legend,ncol=1, heights=c(10,1))
grid7<-grid.arrange(
#First line
arrangeGrob(PlotTimeSeries("X07M1524",data,ylim = c(-60,60)), left=Age("X07M1524"), top=study_years("X07M1524")),
arrangeGrob(PlotTimeSeries("X8M1524",data,ylim = c(-60,60)), top=study_years("X8M1524")),
arrangeGrob(PlotTimeSeries("X12M1524",data,ylim = c(-60,60)), top=study_years("X12M1524")),
arrangeGrob(PlotTimeSeries("X00M1524",data,ylim = c(-60,60)), top=study_years("X00M1524")),
#Second line
arrangeGrob(PlotTimeSeries("X07M2529",data,ylim = c(-60,60)), left=Age("X07M2529")),
arrangeGrob(PlotTimeSeries("X8M2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12M2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00M2529",data,ylim = c(-60,60))),
#Third line
arrangeGrob(PlotTimeSeries("X07M3034",data,ylim = c(-60,60)), left=Age("X07M3034")),
arrangeGrob(PlotTimeSeries("X8M3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12M3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00M3034",data,ylim = c(-60,60))),
#Fourth line
arrangeGrob(PlotTimeSeries("X07M35",data,ylim = c(-60,60)), left=Age("X07M35")),
arrangeGrob(PlotTimeSeries("X8M35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12M35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00M35",data,ylim = c(-60,60))),
ncol=4,
left = textGrob("Age group",gp=gpar(fontsize=11,font=2),rot=90),
top= textGrob("Mexico", gp=gpar(fontsize=13,font=2),rot=0),
bottom=textGrob("Births in months",gp=gpar(fontsize=11,font=2))
)
grid8<-grid.arrange(grid7,legend,ncol=1, heights=c(10,1))
grid9<-grid.arrange(
#First line
arrangeGrob(PlotTimeSeries("X07CH1524",data,ylim = c(-60,60)), left=Age("X07CH1524"), top=study_years("X07CH1524")),
arrangeGrob(PlotTimeSeries("X8CH1524",data,ylim = c(-60,60)), top=study_years("X8CH1524")),
arrangeGrob(PlotTimeSeries("X12CH1524",data,ylim = c(-60,60)), top=study_years("X12CH1524")),
arrangeGrob(PlotTimeSeries("X00CH1524",data,ylim = c(-60,60)), top=study_years("X00CH1524")),
#Second line
arrangeGrob(PlotTimeSeries("X07CH2529",data,ylim = c(-60,60)), left=Age("X07CH2529")),
arrangeGrob(PlotTimeSeries("X8CH2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CH2529",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CH2529",data,ylim = c(-60,60))),
#Third line
arrangeGrob(PlotTimeSeries("X07CH3034",data,ylim = c(-60,60)), left=Age("X07CH3034")),
arrangeGrob(PlotTimeSeries("X8CH3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CH3034",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CH3034",data,ylim = c(-60,60))),
#Fourth line
arrangeGrob(PlotTimeSeries("X07CH35",data,ylim = c(-60,60)), left=Age("X07CH35")),
arrangeGrob(PlotTimeSeries("X8CH35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X12CH35",data,ylim = c(-60,60))),
arrangeGrob(PlotTimeSeries("X00CH35",data,ylim = c(-60,60))),
ncol=4,
left = textGrob("Age group",gp=gpar(fontsize=11,font=2),rot=90),
top= textGrob("Chile", gp=gpar(fontsize=13,font=2),rot=0),
bottom=textGrob("Births in months",gp=gpar(fontsize=11,font=2))
)
grid10<-grid.arrange(grid9,legend,ncol=1, heights=c(10,1))
plot(grid8)
plot(grid6)
plot(grid4)
plot(grid2)
